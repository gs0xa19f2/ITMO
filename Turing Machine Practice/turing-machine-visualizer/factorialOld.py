print("start: s\naccept: ac\nreject: rj\nblank: _\ns 0 -> s X >\ns 1 -> s Y >\ns _ -> copy* * <\ncopy* X -> copy* X <\ncopy* Y -> copy* Y <\ncopy* 1 -> move 1 >\ncopy* 0 -> move 0 >\ncopy* _ -> move _ >\ncopy* * -> place$ * >\nmove X -> moveXF 0 >\nmove Y -> moveYF 1 >\nmoveXF X -> moveXF X >\nmoveXF Y -> moveXF Y >\nmoveXF * -> placeXF * >\nmoveYF X -> moveYF X >\nmoveYF Y -> moveYF Y >\nmoveYF * -> placeYF * >\nplaceXF 1 -> placeXF 1 >\nplaceXF 0 -> placeXF 0 >\nplaceXF _ -> toLeft* 0 <\nplaceYF 1 -> placeYF 1 >\nplaceYF 0 -> placeYF 0 >\nplaceYF _ -> toLeft* 1 <\ntoLeft* 0 -> toLeft* 0 <\ntoLeft* 1 -> toLeft* 1 <\ntoLeft* * -> toLeft** * <\ntoLeft** 0 -> toLeft** 0 <\ntoLeft** 1 -> toLeft** 1 <\ntoLeft** X -> copy* X ^\ntoLeft** Y -> copy* Y ^\ntoLeft** _ -> to* _ >\nto* 0 -> to* 0 >\nto* 1 -> to* 1 >\nto* * -> firstSub * >\nfirstSub 1 -> firstSub 1 >\nfirstSub 0 -> firstSub 0 >\nfirstSub _ -> firstSR _ <\nsecondSub 1 -> secondSub 1 >\nsecondSub 0 -> secondSub 0 >\nsecondSub _ -> secondSR _ <\nsecondSR 0 -> secondSR 1 <\nsecondSR 1 -> place$ 0 >\nsecondSR * -> cleanTape * >\nfirstSR 0 -> firstSR 1 <\nfirstSR 1 -> secondSub 0 >\nfirstSR * -> cleanTapeZero * >\ncleanTapeZero 0 -> cleanTapeZero 0 >\ncleanTapeZero 1 -> cleanTapeZero 1 >\ncleanTapeZero _ -> cleaningZero _ <\ncleaningZero 0 -> cleaningZero _ <\ncleaningZero 1 -> cleaningZero _ <\ncleaningZero * -> cleaningZero _ <\ncleaningZero _ -> ac 1 ^\nplace$ 0 -> place$ 0 >\nplace$ 1 -> place$ 1 >\nplace$ * -> place$ * >\nplace$ _ -> goBack $ <\nplace# 0 -> place# 0 >\nplace# 1 -> place# 1 >\nplace# $ -> place# $ >\nplace# * -> place# * >\nplace# _ -> goBack # <\nplace# # -> place% # >\nplace% 0 -> place% 0 >\nplace% 1 -> place% 1 >\nplace% _ -> copyFact % <\ncopyFact 0 -> copyFact 0 <\ncopyFact 1 -> copyFact 1 <\ncopyFact # -> copyFact # <\ncopyFact $ -> copyFact' $ <\ncopyFact % -> copyFact'' % <\ncopyFact' 0 -> copyFact' X <\ncopyFact' 1 -> copyFact' Y <\ncopyFact' * -> copyFactXY * >\ncopyFact'' 0 -> copyFact'' 0 <\ncopyFact'' 1 -> copyFact'' 1 <\ncopyFact'' # -> copyFact'' # <\ncopyFact'' $ -> copyFact''' $ <\ncopyFact''' X -> copyFact''' X <\ncopyFact''' Y -> copyFact''' Y <\ncopyFact''' 0 -> copyFactXY 0 >\ncopyFact''' 1 -> copyFactXY 1 >\ncopyFact''' * -> copyFactXY * >\ncopyFactXY X -> copyFactX 0 >\ncopyFactXY Y -> copyFactY 1 >\ncopyFactXY $ -> checkMultiplier $ >\nnormalizeMult X -> normalizeMult 0 <\nnormalizeMult Y -> normalizeMult 1 <\nnormalizeMult * -> to$ * >\nto$ 0 -> to$ 0 >\nto$ 1 -> to$ 1 >\nto$ $ -> checkMultiplier $ >\ncopyFactX 0 -> copyFactX 0 >\ncopyFactX X -> copyFactX X >\ncopyFactX Y -> copyFactX Y >\ncopyFactX 1 -> copyFactX 1 >\ncopyFactX $ -> copyFactX $ >\ncopyFactX # -> copyFactX # >\ncopyFactX % -> CFRX % >\ncopyFactY 0 -> copyFactY 0 >\ncopyFactY 1 -> copyFactY 1 >\ncopyFactY X -> copyFactY X >\ncopyFactY Y -> copyFactY Y >\ncopyFactY $ -> copyFactY $ >\ncopyFactY # -> copyFactY # >\ncopyFactY % -> CFRY % >\nCFRX 0 -> CFRX 0 >\nCFRX 1 -> CFRX 1 >\nCFRX _ -> copyFact 0 <\nCFRY 0 -> CFRY 0 >\nCFRY 1 -> CFRY 1 >\nCFRY _ -> copyFact 1 <\nmoveNext 1 -> copyOne Y >\nmoveNext 0 -> copyZero X >\nmoveNext * -> toNormal * <\ntoNormal Y -> toNormal 1 <\ntoNormal X -> toNormal 0 <\ntoNormal # -> toNormal # <\ntoNormal _ -> place# _ >\ntoNormal $ -> subOne $ <\ncopyOne 0 -> copyOne 0 >\ncopyOne 1 -> copyOne 1 >\ncopyOne * -> placeOne * >\ncopyZero 0 -> copyZero 0 >\ncopyZero 1 -> copyZero 1 >\ncopyZero * -> placeZero * >\nplaceOne 1 -> placeOne 1 >\nplaceOne 0 -> placeOne 0 >\nplaceOne $ -> placeOne $ >\nplaceOne _ -> goBack 1 <\nplaceOne # -> placeOne # >\nplaceZero 1 -> placeZero 1 >\nplaceZero 0 -> placeZero 0 >\nplaceZero $ -> placeZero $ >\nplaceZero _ -> goBack 0 <\nplaceZero # -> placeZero # >\ngoBack _ -> moveNext _ >\ngoBack 1 -> goBack 1 <\ngoBack 0 -> goBack 0 <\ngoBack * -> goBack * <\ngoBack $ -> goBack $ <\ngoBack # -> goBack # <\ngoBack X -> moveNext X >\ngoBack Y -> moveNext Y >\ncheckMultiplier 1 -> checkMultiplier 1 <\ncheckMultiplier 0 -> checkMultiplier 0 <\ncheckMultiplier # -> checkMultiplier # <\ncheckMultiplier % -> checkMultiplier % <\ncheckMultiplier $ -> subOne $ <\nsubOne 0 -> subOne 1 <\nsubOne 1 -> checkRight 0 >\nsubOne * -> checkFactRight * >\ncheckFactRight 0 -> checkFactRight 0 >\ncheckFactRight 1 -> checkFactRight 1 >\ncheckFactRight # -> checkFactRight # >\ncheckFactRight $ -> checkFactRight $ >\ncheckFactRight % -> checkFactRight % >\ncheckFactRight _ -> subFactOne _ <\ncheckFactRight Z -> to*L Z <\nsubFactOne 0 -> subFactOne 1 <\nsubFactOne 1 -> prepare 0 >\nsubFactOne % -> finR Z >\nprepare 0 -> prepare 0 >\nprepare 1 -> prepare 1 >\nprepare _ -> factXY _ <\nfactXY 0 -> factXY X <\nfactXY 1 -> factXY Y <\nfactXY % -> getXY % >\ngetXY 0 -> getXY 0 >\ngetXY 1 -> getXY 1 >\ngetXY _ -> subFactOne _ <\ngetXY # -> getXY # >\ngetXY $ -> getXY $ >\ngetXY % -> getXY % >\ngetXY X -> copyFactRightX 0 <\ngetXY Y -> copyFactRightY 1 <\nfinR 1 -> finR Z >\nfinR _ -> finL _ <\nfinL Z -> finL _ <\nfinL 0 -> finL _ <\nfinL 1 -> finL _ <\nfinL # -> finL _ <\nfinL $ -> finL _ <\nfinL * -> completing _ <\ncompleting 0 -> completing 0 <\ncompleting 1 -> completing 1 <\ncompleting _ -> ac _ >\ncopyFactRightX 0 -> copyFactRightX 0 <\ncopyFactRightX 1 -> copyFactRightX 1 <\ncopyFactRightX % -> copyFactRightX % <\ncopyFactRightX $ -> copyFactRightX $ <\ncopyFactRightX # -> copyFactRightX # <\ncopyFactRightX * -> copyFactRightX' * >\ncopyFactRightX X -> copyFactRightX' X >\ncopyFactRightX Y -> copyFactRightX' Y >\ncopyFactRightY 0 -> copyFactRightY 0 <\ncopyFactRightY 1 -> copyFactRightY 1 <\ncopyFactRightY % -> copyFactRightY % <\ncopyFactRightY $ -> copyFactRightY $ <\ncopyFactRightY # -> copyFactRightY # <\ncopyFactRightY * -> copyFactRightY' * >\ncopyFactRightY X -> copyFactRightY' X >\ncopyFactRightY Y -> copyFactRightY' Y >\ncopyFactRightX' 0 -> getXY' X >\ncopyFactRightX' 1 -> getXY' X >\ncopyFactRightX' X -> copyFactRightX' X >\ncopyFactRightX' Y -> copyFactRightX' Y >\ncopyFactRightY' 0 -> getXY' Y >\ncopyFactRightY' 1 -> getXY' Y >\ncopyFactRightY' X -> copyFactRightY' X >\ncopyFactRightY' Y -> copyFactRightY' Y >\ngetXY' $ -> newCircle C >\ngetXY' 0 -> getXY 0 >\ngetXY' 1 -> getXY 1 >\nnewCircle 0 -> newCircle C >\nnewCircle 1 -> newCircle C >\nnewCircle # -> newCircle C >\nnewCircle % -> newCircle C >\nnewCircle X -> newCircle C >\nnewCircle Y -> newCircle C >\nnewCircle _ -> startNewCircle _ <\nstartNewCircle C -> startNewCircle _ <\nstartNewCircle X -> startNewCircle 0 <\nstartNewCircle Y -> startNewCircle 1 <\nstartNewCircle * -> place$ * >\nto*L 0 -> to*L 0 <\nto*L 1 -> to*L 1 <\nto*L # -> to*L # <\nto*L $ -> to*L $ <\nto*L Z -> to*L Z <\nto*L % -> to*L % <\nto*L * -> cleanTape * >\ncleanTape 1 -> cleanTape * >\ncleanTape 0 -> cleanTape * >\ncleanTape # -> cleanTape * >\ncleanTape $ -> cleanTape * >\ncleanTape % -> cleanTape * >\ncleanTape Z -> cleanTape * >\ncleanTape _ -> cleaning _ <\ncleaning * -> cleaning _ <\ncleaning 0 -> cleaning 0 <\ncleaning 1 -> cleaning 1 <\ncleaning _ -> ac _ >\ncheckRight 0 -> checkRight 0 >\ncheckRight 1 -> checkRight 1 >\ncheckRight $ -> checkRight $ >\ncheckRight _ -> checkRight _ >\ncheckRight * -> checkRight * >\ncheckRight # -> subOR # >\nsubOR 1 -> subOR 1 >\nsubOR 0 -> subOR 0 >\nsubOR % -> subOneRight % <\nsubOneRight 0 -> subOneRight 1 <\nsubOneRight 1 -> add 0 <\nsubOneRight # -> copyNum # <\nadd 1 -> add 1 <\nadd 0 -> add 0 <\nadd # -> add # <\nadd $ -> add $ <\nadd * -> addOne * <\naddOne 1 -> added 0 <\naddOne 0 -> checkRight 1 >\nadded 0 -> checkRight 1 >\nadded 1 -> added 0 <\nadded _ -> checkRight 1 <\ncopyNum 0 -> copyNum 0 <\ncopyNum 1 -> copyNum 1 <\ncopyNum X -> copying X >\ncopyNum Y -> copying Y >\ncopyNum $ -> copying $ >\ncopyNum # -> toRight # >\ntoRight 0 -> toRight 0 >\ntoRight 1 -> toRight 1 >\ntoRight # -> toRight # >\ntoRight X -> toRight X >\ntoRight Y -> toRight Y >\ntoRight % -> toNormal % <\ncopying Y -> copying Y >\ncopying X -> copying X >\ncopying 1 -> moveY Y >\ncopying 0 -> moveX X >\ncopying # -> toRight # >\nmoveX # -> placeX # >\nmoveX 0 -> moveX 0 >\nmoveX 1 -> moveX 1 >\nmoveY # -> placeY # >\nmoveY 0 -> moveY 0 >\nmoveY 1 -> moveY 1 >\nplaceX 0 -> toLeft X <\nplaceX 1 -> toLeft X <\nplaceX _ -> toLeft X <\nplaceX X -> placeX X >\nplaceX Y -> placeX Y >\nplaceY 0 -> toLeft Y <\nplaceY 1 -> toLeft Y <\nplaceY _ -> toLeft Y <\nplaceY X -> placeY X >\nplaceY Y -> placeY Y >\nplaceY # -> placeY # >\ntoLeft 0 -> toLeft 0 <\ntoLeft 1 -> toLeft 1 <\ntoLeft X -> toLeft X <\ntoLeft Y -> toLeft Y <\ntoLeft # -> toLeft # <\ntoLeft $ -> copyNum $ >\n", file=open("factorialOld.out", "w"))
