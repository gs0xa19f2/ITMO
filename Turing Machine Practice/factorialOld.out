start: s
accept: ac
reject: rj
blank: _
    
s 0 -> s X >
s 1 -> s Y > 
s _ -> copy* * <
  
copy* X -> copy* X <
copy* Y -> copy* Y <
copy* 1 -> move 1 >
copy* 0 -> move 0 >
copy* _ -> move _ >
copy* * -> place$ * >
  
move X -> moveXF 0 > 
move Y -> moveYF 1 > 
  
moveXF X -> moveXF X >
moveXF Y -> moveXF Y >
moveXF * -> placeXF * >
  
moveYF X -> moveYF X >
moveYF Y -> moveYF Y >
moveYF * -> placeYF * >
  
placeXF 1 -> placeXF 1 >
placeXF 0 -> placeXF 0 >
placeXF _ -> toLeft* 0 <
  
placeYF 1 -> placeYF 1 >
placeYF 0 -> placeYF 0 >
placeYF _ -> toLeft* 1 <
  
toLeft* 0 -> toLeft* 0 <
toLeft* 1 -> toLeft* 1 <
toLeft* * -> toLeft** * <
  
toLeft** 0 -> toLeft** 0 <
toLeft** 1 -> toLeft** 1 <
toLeft** X -> copy* X ^
toLeft** Y -> copy* Y ^
toLeft** _ -> to* _ >
  
to* 0 -> to* 0 >
to* 1 -> to* 1 >
to* * -> firstSub * >
    
firstSub 1 -> firstSub 1 >
firstSub 0 -> firstSub 0 >
firstSub _ -> firstSR _ <
  
secondSub 1 -> secondSub 1 >
secondSub 0 -> secondSub 0 >
secondSub _ -> secondSR _ <
  
secondSR 0 -> secondSR 1 <
secondSR 1 -> place$ 0 >
secondSR * -> cleanTape * >
    
firstSR 0 -> firstSR 1 <
firstSR 1 -> secondSub 0 >
firstSR * -> cleanTapeZero * >
  
cleanTapeZero 0 -> cleanTapeZero 0 >
cleanTapeZero 1 -> cleanTapeZero 1 >
cleanTapeZero _ -> cleaningZero _ <
  
cleaningZero 0 -> cleaningZero _ <
cleaningZero 1 -> cleaningZero _ <
cleaningZero * -> cleaningZero _ <
cleaningZero _ -> ac 1 ^
    
place$ 0 -> place$ 0 >
place$ 1 -> place$ 1 >
place$ * -> place$ * >
place$ _ -> goBack $ <
    
place# 0 -> place# 0 >
place# 1 -> place# 1 >
place# $ -> place# $ >
place# * -> place# * >
place# _ -> goBack # <
place# # -> place% # >
  
place% 0 -> place% 0 >
place% 1 -> place% 1 >
place% _ -> copyFact % <
  
copyFact 0 -> copyFact 0 <
copyFact 1 -> copyFact 1 <
copyFact # -> copyFact # <
copyFact $ -> copyFact' $ <
copyFact % -> copyFact'' % <
  
copyFact' 0 -> copyFact' X <
copyFact' 1 -> copyFact' Y <
copyFact' * -> copyFactXY * >
  
copyFact'' 0 -> copyFact'' 0 <
copyFact'' 1 -> copyFact'' 1 <
copyFact'' # -> copyFact'' # <
copyFact'' $ -> copyFact''' $ <
  
copyFact''' X -> copyFact''' X <
copyFact''' Y -> copyFact''' Y <
copyFact''' 0 -> copyFactXY 0 >
copyFact''' 1 -> copyFactXY 1 >
copyFact''' * -> copyFactXY * >
  
copyFactXY X -> copyFactX 0 >
copyFactXY Y -> copyFactY 1 >
copyFactXY $ -> checkMultiplier $ >
  
normalizeMult X -> normalizeMult 0 <
normalizeMult Y -> normalizeMult 1 <
normalizeMult * -> to$ * >
  
to$ 0 -> to$ 0 >
to$ 1 -> to$ 1 >
to$ $ -> checkMultiplier $ >
  
copyFactX 0 -> copyFactX 0 >
copyFactX X -> copyFactX X >
copyFactX Y -> copyFactX Y >
copyFactX 1 -> copyFactX 1 >
copyFactX $ -> copyFactX $ >
copyFactX # -> copyFactX # >
copyFactX % -> CFRX % >
  
copyFactY 0 -> copyFactY 0 >
copyFactY 1 -> copyFactY 1 >
copyFactY X -> copyFactY X >
copyFactY Y -> copyFactY Y >
copyFactY $ -> copyFactY $ >
copyFactY # -> copyFactY # >
copyFactY % -> CFRY % >
  
CFRX 0 -> CFRX 0 >
CFRX 1 -> CFRX 1 > 
CFRX _ -> copyFact 0 <
  
CFRY 0 -> CFRY 0 >
CFRY 1 -> CFRY 1 >
CFRY _ -> copyFact 1 <
  
moveNext 1 -> copyOne Y >
moveNext 0 -> copyZero X >
moveNext * -> toNormal * <
    
toNormal Y -> toNormal 1 <
toNormal X -> toNormal 0 <
toNormal # -> toNormal # <
toNormal _ -> place# _ >
toNormal $ -> subOne $ <
    
copyOne 0 -> copyOne 0 >
copyOne 1 -> copyOne 1 >
copyOne * -> placeOne * >
    
copyZero 0 -> copyZero 0 >
copyZero 1 -> copyZero 1 >
copyZero * -> placeZero * >
    
placeOne 1 -> placeOne 1 >
placeOne 0 -> placeOne 0 >
placeOne $ -> placeOne $ >
placeOne _ -> goBack 1 <
placeOne # -> placeOne # > 
    
placeZero 1 -> placeZero 1 >
placeZero 0 -> placeZero 0 >
placeZero $ -> placeZero $ >
placeZero _ -> goBack 0 <
placeZero # -> placeZero # >
    
goBack _ -> moveNext _ >
goBack 1 -> goBack 1 <
goBack 0 -> goBack 0 <
goBack * -> goBack * <
goBack $ -> goBack $ <
goBack # -> goBack # <
goBack X -> moveNext X >
goBack Y -> moveNext Y > 
    
checkMultiplier 1 -> checkMultiplier 1 <
checkMultiplier 0 -> checkMultiplier 0 <
checkMultiplier # -> checkMultiplier # <
checkMultiplier % -> checkMultiplier % <
checkMultiplier $ -> subOne $ <
    
subOne 0 -> subOne 1 <
subOne 1 -> checkRight 0 >
subOne * -> checkFactRight * >
  
checkFactRight 0 -> checkFactRight 0 >
checkFactRight 1 -> checkFactRight 1 >
checkFactRight # -> checkFactRight # >
checkFactRight $ -> checkFactRight $ >
checkFactRight % -> checkFactRight % >
checkFactRight _ -> subFactOne _ <
checkFactRight Z -> to*L Z <
  
subFactOne 0 -> subFactOne 1 <
subFactOne 1 -> prepare 0 >
subFactOne % -> finR Z >
  
prepare 0 -> prepare 0 >
prepare 1 -> prepare 1 >
prepare _ -> factXY _ <
  
factXY 0 -> factXY X <
factXY 1 -> factXY Y <
factXY % -> getXY % >
  
getXY 0 -> getXY 0 >
getXY 1 -> getXY 1 >
getXY _ -> subFactOne _ <
getXY # -> getXY # >
getXY $ -> getXY $ >
getXY % -> getXY % >
getXY X -> copyFactRightX 0 <
getXY Y -> copyFactRightY 1 <
  
finR 1 -> finR Z >
finR _ -> finL _ <
  
finL Z -> finL _ <
finL 0 -> finL _ <
finL 1 -> finL _ <
finL # -> finL _ <
finL $ -> finL _ <
finL * -> completing _ <
  
completing 0 -> completing 0 <
completing 1 -> completing 1 <
completing _ -> ac _ >
  
copyFactRightX 0 -> copyFactRightX 0 <
copyFactRightX 1 -> copyFactRightX 1 <
copyFactRightX % -> copyFactRightX % <
copyFactRightX $ -> copyFactRightX $ <
copyFactRightX # -> copyFactRightX # <
copyFactRightX * -> copyFactRightX' * >
copyFactRightX X -> copyFactRightX' X >
copyFactRightX Y -> copyFactRightX' Y >
  
copyFactRightY 0 -> copyFactRightY 0 <
copyFactRightY 1 -> copyFactRightY 1 <
copyFactRightY % -> copyFactRightY % <
copyFactRightY $ -> copyFactRightY $ <
copyFactRightY # -> copyFactRightY # <
copyFactRightY * -> copyFactRightY' * >
copyFactRightY X -> copyFactRightY' X >
copyFactRightY Y -> copyFactRightY' Y >
  
copyFactRightX' 0 -> getXY' X >
copyFactRightX' 1 -> getXY' X >
copyFactRightX' X -> copyFactRightX' X >
copyFactRightX' Y -> copyFactRightX' Y >
  
copyFactRightY' 0 -> getXY' Y >
copyFactRightY' 1 -> getXY' Y >
copyFactRightY' X -> copyFactRightY' X >
copyFactRightY' Y -> copyFactRightY' Y >
  
getXY' $ -> newCircle C >
getXY' 0 -> getXY 0 >
getXY' 1 -> getXY 1 >
  
newCircle 0 -> newCircle C >
newCircle 1 -> newCircle C >
newCircle # -> newCircle C >
newCircle % -> newCircle C >
newCircle X -> newCircle C >
newCircle Y -> newCircle C >
newCircle _ -> startNewCircle _ <
  
startNewCircle C -> startNewCircle _ <
startNewCircle X -> startNewCircle 0 <
startNewCircle Y -> startNewCircle 1 <
startNewCircle * -> place$ * >
  
  
to*L 0 -> to*L 0 <
to*L 1 -> to*L 1 <
to*L # -> to*L # <
to*L $ -> to*L $ <
to*L Z -> to*L Z <
to*L % -> to*L % <
to*L * -> cleanTape * >
    
cleanTape 1 -> cleanTape * >
cleanTape 0 -> cleanTape * >
cleanTape # -> cleanTape * >
cleanTape $ -> cleanTape * >
cleanTape % -> cleanTape * >
cleanTape Z -> cleanTape * >
cleanTape _ -> cleaning _ <
    
cleaning * -> cleaning _ <
cleaning 0 -> cleaning 0 <
cleaning 1 -> cleaning 1 <
cleaning _ -> ac _ >
    
checkRight 0 -> checkRight 0 >
checkRight 1 -> checkRight 1 >
checkRight $ -> checkRight $ >
checkRight _ -> checkRight _ >
checkRight * -> checkRight * >
checkRight # -> subOR # > 
    
subOR 1 -> subOR 1 >
subOR 0 -> subOR 0 >
subOR % -> subOneRight % <
    
subOneRight 0 -> subOneRight 1 <
subOneRight 1 -> add 0 <
subOneRight # -> copyNum # <  
    
add 1 -> add 1 <
add 0 -> add 0 <
add # -> add # <
add $ -> add $ <
add * -> addOne * <
    
addOne 1 -> added 0 <
addOne 0 -> checkRight 1 >
    
added 0 -> checkRight 1 >
added 1 -> added 0 <
added _ -> checkRight 1 <
    
copyNum 0 -> copyNum 0 <
copyNum 1 -> copyNum 1 <
copyNum X -> copying X >
copyNum Y -> copying Y >
copyNum $ -> copying $ >
copyNum # -> toRight # >
    
toRight 0 -> toRight 0 >
toRight 1 -> toRight 1 >
toRight # -> toRight # >
toRight X -> toRight X >
toRight Y -> toRight Y >
toRight % -> toNormal % <
    
copying Y -> copying Y >
copying X -> copying X >
copying 1 -> moveY Y >
copying 0 -> moveX X >
copying # -> toRight # >
    
moveX # -> placeX # >
moveX 0 -> moveX 0 >
moveX 1 -> moveX 1 >
    
moveY # -> placeY # >
moveY 0 -> moveY 0 >
moveY 1 -> moveY 1 >
    
placeX 0 -> toLeft X <
placeX 1 -> toLeft X <
placeX _ -> toLeft X <
placeX X -> placeX X > 
placeX Y -> placeX Y >
    
placeY 0 -> toLeft Y <
placeY 1 -> toLeft Y <
placeY _ -> toLeft Y <
placeY X -> placeY X >
placeY Y -> placeY Y >
placeY # -> placeY # >
    
toLeft 0 -> toLeft 0 <
toLeft 1 -> toLeft 1 <
toLeft X -> toLeft X <
toLeft Y -> toLeft Y <
toLeft # -> toLeft # <
toLeft $ -> copyNum $ >
